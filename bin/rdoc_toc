#!/usr/bin/env ruby

require 'rdoc_toc'

# Confirm that we're in a git project.
git_dir = `git rev-parse --show-toplevel`.chomp
unless $?.success?
  message = <<EOT

rdoc_toc must run inside a .git project.
That is, the working directory one of its parents must be a .git directory.
EOT
  raise RuntimeError.new(message)
end

# Each command foo has a corresponding Ruby executable _foo.
def command_keywords
  dir_path = File.dirname(__FILE__)
  dirs = Dir.entries(dir_path)
  command_file_names = dirs.select{|x| x.start_with?('_') }
  command_file_names.collect {|x| x.sub(/^_/, '')}
end

def usage
  puts <<-EOT
  Usage: rdoc_toc command [options] [args]

  where

    * Command is one of #{command_keywords.inspect}.

  EOT
  exit
end

command_keyword = ARGV[0]
unless command_keywords.include?(command_keyword)
  usage
end

bindir = File.dirname(__FILE__)
bin_file_path = File.absolute_path(File.join(
                    bindir,
                    '_' + command_keyword,
))
command = "ruby #{bin_file_path} #{ARGV.join(' ')}"
system(command)
